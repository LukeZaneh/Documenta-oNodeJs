{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bem-Vindo a Documenta\u00e7\u00e3o do Node.js","text":"<p>Para acessar a documenta\u00e7\u00e3o completa acesse nodejs.org.</p> <p></p>"},{"location":"#comandos-basicos","title":"Comandos B\u00e1sicos","text":"<ul> <li><code>npm install</code> - Utilizado para instalar pacotes e bibliotecas.</li> <li><code>npm uninstall</code> - Remove pacotes n\u00e3o utilizados. *<code>npm update</code> - Atualiza vers\u00f5es de pacotes.</li> <li><code>npm init</code> - Inicializa o npm no projeto.</li> <li><code>npm start</code> - Executa a aplica\u00e7\u00e3o conforme o script start.</li> <li><code>npm run</code> - Executa qualquer script definido no package.json.</li> </ul>"},{"location":"#layout-do-projeto","title":"Layout do Projeto","text":"<p>O projeto em NodeJs pode ser modificado para atender a diversas particularidades, mas basicamente segue a seguinte estrutura:</p> <pre><code>src\n    app.js          # Classe app\n    server.js       # Server para iniciar o app\napi             \n    controllers   # Fun\u00e7\u00f5es da controllers do express route\n    models        # Modelos do banco de dados\n    services      # Regras de neg\u00f3cio\n    subscribers   # Eventos async \n    repositories* # Query builders \nconfig          # Configura\u00e7\u00e3o das variaveis de ambiente\njobs            # Tarefas de rotinas\nloaders         # Modulos para utilizado no app\nutils           # Trechos de c\u00f3digo pequeno\nhelpers         # Trechos de arquitetura de c\u00f3digo\nroutes          # Defini\u00e7\u00e3o de rotas express\ntypes           # Tipagem (d.ts) para Typescript\n</code></pre>"},{"location":"introducao/","title":"Introdu\u00e7\u00e3o","text":""},{"location":"introducao/#o-que-e-o-nodejs","title":"O Que \u00e9 o NodeJs?","text":"<p>Node.js \u00e9 uma plataforma de desenvolvimento que permite a execu\u00e7\u00e3o de c\u00f3digo JavaScript fora do navegador, utilizando o motor V8 do Google, que tamb\u00e9m \u00e9 usado no Google Chrome. Ele foi criado por Ryan Dahl em 2009 e \u00e9 amplamente utilizado para construir aplicativos de rede escal\u00e1veis e servidores de alto desempenho, principalmente porque permite a constru\u00e7\u00e3o de aplica\u00e7\u00f5es em tempo real e alta capacidade de resposta.</p>"},{"location":"introducao/#sua-historia","title":"Sua hist\u00f3ria","text":"<ul> <li>Ano de 2009:</li> <li>Nascimento do Node.js.</li> <li> <p>Cria\u00e7\u00e3o da primeira vers\u00e3o do npm (Node Package Manager).</p> </li> <li> <p>Ano de 2010:</p> </li> <li>Desenvolvimento do framework Express (voltado ao desenvolvimento web no Node).</li> <li> <p>Lan\u00e7amento do Socket.io (framework criado para facilitar a implanta\u00e7\u00e3o de Sockets).</p> </li> <li> <p>Ano de 2011:</p> </li> <li>O npm ganha sua vers\u00e3o 1.0.</li> <li> <p>LinkedIn e Uber adotam o Node em seus sistemas.</p> </li> <li> <p>Ano de 2013:</p> </li> <li>Ghost (primeira grande plataforma de blogs) passa a utilizar o Node.</li> <li> <p>Nascimento da ferramenta web Koa, voltada para o Node.</p> </li> <li> <p>Ano de 2014:</p> </li> <li> <p>O io.js se torna o maior fork do Node, com o objetivo de introduzir o suporte ao ES6 no mercado.</p> </li> <li> <p>Ano de 2015:</p> </li> <li>A Node.js Foundation \u00e9 inaugurada e a quarta vers\u00e3o da ferramenta \u00e9 lan\u00e7ada.</li> <li> <p>O io.js \u00e9 incorporado ao Node.</p> </li> <li> <p>Ano de 2017:</p> </li> <li>O Node ganha sua oitava vers\u00e3o.</li> <li> <p>A V8 introduz o Node.js em sua su\u00edte de testes, tornando a ferramenta oficialmente um mecanismo do JavaScript.</p> </li> <li> <p>Ano de 2020:</p> </li> <li>O Node.js em sua vers\u00e3o 18 \u00e9 lan\u00e7ado, incluindo um m\u00f3dulo de test runner nativo, fetch global, melhorias no V8 e novos m\u00e9todos para arrays.</li> </ul>"},{"location":"introducao/#por-que-utilizar-essa-ferramenta","title":"Por que utilizar essa ferramenta?","text":"<p>Sem a utiliza\u00e7\u00e3o do Node, a forma de lidar com a concorr\u00eancia das v\u00e1rias requisi\u00e7\u00f5es que um sistema recebe seria criando m\u00faltiplas threads. Por\u00e9m, dentro de cada thread criada, h\u00e1 um tempo de resposta que n\u00e3o \u00e9 aproveitado para nada enquanto a resposta n\u00e3o retorna; como consequ\u00eancia, a CPU fica bloqueada para realizar outras opera\u00e7\u00f5es.</p> <p>Com a utiliza\u00e7\u00e3o do Node, diversas requisi\u00e7\u00f5es podem ser executadas simultaneamente. Em vez de esperar uma resposta para a requisi\u00e7\u00e3o, ele processa a requisi\u00e7\u00e3o seguinte da fila. Assim que a resposta da primeira requisi\u00e7\u00e3o chega, a ferramenta dispara um evento e o callback da requisi\u00e7\u00e3o (ou seja, a fun\u00e7\u00e3o que executa a resposta) \u00e9 colocado na fila de requisi\u00e7\u00f5es e \u00e9 executado assim que sua vez chegar, finalizando a primeira requisi\u00e7\u00e3o.</p> <p>Ele \u00e9 indicado para uso em: - APIs - Aplica\u00e7\u00f5es web de chat ou colaborativas para v\u00e1rios usu\u00e1rios - Jogos multiplayer - Aplica\u00e7\u00f5es que precisam de alta escalabilidade - Streamings</p>"},{"location":"introducao/#grandes-corporacoes-que-aderiram-ao-uso-do-node","title":"Grandes corpora\u00e7\u00f5es que aderiram ao uso do Node","text":"<p>Walmart: No ano de 2013, a empresa migrou todo o seu tr\u00e1fego mobile para o Node.js durante o per\u00edodo da Black Friday. Foi percebido que seus servidores chegaram a apenas 1% de utiliza\u00e7\u00e3o com 200 milh\u00f5es de usu\u00e1rios online. NodeDay</p> <p>PayPal: Desenvolveu uma aplica\u00e7\u00e3o com Node.js e Java, que teve 33% menos linhas de c\u00f3digo e 40% menos arquivos, dobrou o n\u00famero de requisi\u00e7\u00f5es por segundo e diminuiu em 35% o tempo de resposta. Medium Paypal</p> <p>Outras empresas que utilizam o Node.js: - Netflix - LinkedIn - New York Times - Flickr - Mozilla - Yahoo</p>"},{"location":"introducao/#principais-vantagens","title":"Principais Vantagens","text":"<p>Alta Performance: Node.js \u00e9 conhecido por sua alta performance, principalmente em aplica\u00e7\u00f5es que exigem grande volume de opera\u00e7\u00f5es de entrada/sa\u00edda, como sistemas de chat e servidores de streaming. Isso se deve ao seu modelo de opera\u00e7\u00e3o baseado em eventos e n\u00e3o-bloqueante, que permite que ele processe m\u00faltiplas requisi\u00e7\u00f5es de forma ass\u00edncrona.</p> <p>Escalabilidade: A arquitetura orientada a eventos do Node.js facilita a cria\u00e7\u00e3o de aplicativos altamente escal\u00e1veis. Em vez de criar m\u00faltiplas threads, Node.js utiliza um \u00fanico thread que \u00e9 capaz de gerenciar milhares de conex\u00f5es simultaneamente.</p> <p>Ecossistema Rico: O Node.js tem um ecossistema vasto e em constante crescimento, principalmente atrav\u00e9s do NPM (Node Package Manager), que \u00e9 o maior reposit\u00f3rio de bibliotecas de c\u00f3digo aberto. Isso facilita o desenvolvimento, pois muitas funcionalidades j\u00e1 est\u00e3o dispon\u00edveis em pacotes reutiliz\u00e1veis.</p> <p>Comunidade Ativa: A comunidade do Node.js \u00e9 grande e ativa, o que significa que h\u00e1 uma vasta quantidade de recursos, tutoriais, e f\u00f3runs dispon\u00edveis para desenvolvedores. Al\u00e9m disso, a comunidade frequentemente atualiza o Node.js com melhorias e corre\u00e7\u00f5es de bugs.</p> <p>Full-Stack Development: Com o Node.js, os desenvolvedores podem usar JavaScript tanto no front-end quanto no back-end, o que pode simplificar o desenvolvimento e a manuten\u00e7\u00e3o do c\u00f3digo, al\u00e9m de reduzir a curva de aprendizado para novos desenvolvedores.</p>"},{"location":"introducao/#principais-desvantagens","title":"Principais Desvantagens","text":"<p>Modelo de Single Thread: Embora o modelo de single thread do Node.js seja uma vantagem em muitos casos, ele pode se tornar uma desvantagem em aplica\u00e7\u00f5es que exigem processamento intensivo de CPU. Em tais situa\u00e7\u00f5es, o Node.js pode apresentar gargalos de desempenho.</p> <p>Inexperi\u00eancia em Programa\u00e7\u00e3o Ass\u00edncrona: Desenvolvedores que n\u00e3o est\u00e3o familiarizados com programa\u00e7\u00e3o ass\u00edncrona podem achar o Node.js desafiador, especialmente quando se trata de lidar com callbacks aninhados, que podem levar ao chamado \"callback hell\".</p> <p>Imaturidade de Algumas Ferramentas: Embora o ecossistema do Node.js esteja crescendo, algumas bibliotecas e ferramentas ainda est\u00e3o em fase de desenvolvimento ou s\u00e3o menos maduras em compara\u00e7\u00e3o com outras tecnologias, o que pode levar a problemas de estabilidade ou falta de recursos.</p> <p>Baixa Compatibilidade com Opera\u00e7\u00f5es Pesadas de CPU: Aplica\u00e7\u00f5es que envolvem c\u00e1lculos matem\u00e1ticos complexos ou outras opera\u00e7\u00f5es intensivas de CPU podem n\u00e3o ter um bom desempenho no Node.js, uma vez que ele \u00e9 otimizado para opera\u00e7\u00f5es de E/S.</p>"},{"location":"introducao/#ferramentas-para-usar-com-nodejs","title":"Ferramentas para usar com Node.js","text":"<p>Express.js: Um framework minimalista e flex\u00edvel para Node.js, amplamente utilizado para criar aplica\u00e7\u00f5es web e APIs. Ele facilita a cria\u00e7\u00e3o de servidores e o gerenciamento de rotas.</p> <p>Socket.io: Uma biblioteca que permite a comunica\u00e7\u00e3o em tempo real, ideal para aplica\u00e7\u00f5es como chats e jogos multiplayer. Ele simplifica a cria\u00e7\u00e3o de conex\u00f5es WebSocket.</p> <p>NPM (Node Package Manager): Ferramenta essencial para gerenciar pacotes e depend\u00eancias em projetos Node.js. Atrav\u00e9s do NPM, os desenvolvedores podem instalar e compartilhar bibliotecas e ferramentas.</p> <p>PM2: Um gerenciador de processos para aplica\u00e7\u00f5es Node.js. Ele ajuda a monitorar a aplica\u00e7\u00e3o em tempo real, reiniciar automaticamente em caso de falhas e gerenciar m\u00faltiplas inst\u00e2ncias.</p> <p>Mocha: Um framework de testes para Node.js, que permite a cria\u00e7\u00e3o de testes unit\u00e1rios e facilita a manuten\u00e7\u00e3o e a confiabilidade do c\u00f3digo.</p> <p>TypeScript: Embora n\u00e3o seja uma ferramenta exclusiva do Node.js, o TypeScript \u00e9 amplamente utilizado em projetos Node.js para adicionar tipagem est\u00e1tica ao JavaScript, melhorando a robustez e a escalabilidade do c\u00f3digo.</p>"},{"location":"introducao/#sites-de-ajuda-e-documentacao","title":"Sites de Ajuda e Documenta\u00e7\u00e3o","text":"<p>O site Node Js Documentation \u00e9 a documenta\u00e7\u00e3o oficial do Node.js, que cont\u00e9m informa\u00e7\u00f5es detalhadas sobre as APIs e funcionalidades da plataforma.</p> <p>O site MDN Web Docs possui tutoriais e guias sobre Node.js e Express.js, que podem ser \u00fateis para desenvolvedores que est\u00e3o come\u00e7ando a trabalhar com essas tecnologias.</p>"},{"location":"recursos/","title":"Recursos","text":""},{"location":"recursos/#principais-recursos","title":"Principais Recursos","text":"<ol> <li>Arquitetura Event Driven e Non Blocking I/O</li> <li>M\u00f3dulos e NPM (Node Package Manager)</li> <li>Sistema de Eventos</li> <li>Manipula\u00e7\u00e3o de Banco de Dados</li> </ol> <p>Arquitetura Event-Driven e Non-Blocking I/O</p> <p>Node.js utiliza um modelo de I/O n\u00e3o-bloqueante e orientado a eventos, o que o torna ideal para aplica\u00e7\u00f5es que precisam lidar com um grande n\u00famero de conex\u00f5es simult\u00e2neas, como servidores web e aplica\u00e7\u00f5es em tempo real.</p> <p>Exemplo:</p> <pre><code>const http = require('http');\nconst server = http.createServer((req, res) =&gt; {\nres.statusCode = 200;\nres.setHeader('Content-Type', 'text/plain');\nres.end('Hello, World!\\n');\n});\nserver.listen(3000, '127.0.0.1', () =&gt; {\nconsole.log('Servidor rodando em http://127.0.0.1:3000/');\n});\n</code></pre> <p>M\u00f3dulos e NPM (Node Package Manager)</p> <p>Node.js segue uma arquitetura modular, permitindo que voc\u00ea use m\u00f3dulos nativos ou de terceiros para adicionar funcionalidades ao seu projeto. O NPM \u00e9 o gerenciador de pacotes oficial do Node.js, que facilita a instala\u00e7\u00e3o, atualiza\u00e7\u00e3o e remo\u00e7\u00e3o de pacotes.</p> <p>Exemplo: <pre><code>// Importando o m\u00f3dulo 'fs' (file system)\nconst fs = require('fs');\n// Lendo um arquivo de forma ass\u00edncrona\nfs.readFile('arquivo.txt', 'utf8', (err, data) =&gt; {\nif (err) throw err;\nconsole.log(data);\n});\n</code></pre></p> <p>Sistema de Eventos</p> <p>O m\u00f3dulo events permite que voc\u00ea trabalhe com o sistema de eventos do Node.js, que \u00e9 fundamental para sua arquitetura ass\u00edncrona.</p> <p>Exemplo: <pre><code>const EventEmitter = require('events');\nclass MeuEmissor extends EventEmitter {}\nconst meuEmissor = new MeuEmissor();\nmeuEmissor.on('evento', () =&gt; {\nconsole.log('Um evento ocorreu!');\n});\nmeuEmissor.emit('evento');\n</code></pre></p> <p>Manipula\u00e7\u00e3o de Banco de Dados</p> <p>Node.js pode se conectar a v\u00e1rios tipos de bancos de dados, tanto SQL quanto NoSQL. Abaixo est\u00e1 um exemplo de conex\u00e3o com o MongoDB usando o Mongoose, um ODM (Object Data Modeling) para MongoDB.</p> <p>Exemplo: <pre><code>const mongoose = require('mongoose');\nmongoose.connect('mongodb://localhost/meubanco', { useNewUrlParser: true, useUnifiedTopology: true });\nconst db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'Erro de conex\u00e3o:'));\ndb.once('open', function() {\nconsole.log('Conectado ao MongoDB!');\n});\n</code></pre></p>"},{"location":"recursos/#frameworks-populares","title":"Frameworks Populares","text":"<p>Express.js</p> <p>Express.js \u00e9 um framework web minimalista e flex\u00edvel para Node.js, que fornece uma s\u00e9rie de recursos para criar aplica\u00e7\u00f5es web e APIs de forma r\u00e1pida e eficiente.</p> <ul> <li> <p>Exemplo: <pre><code>const express = require('express');\nconst app = express();\napp.get('/', (req, res) =&gt; {\nres.send('Hello, World!');\n});\napp.listen(3000, () =&gt; {\nconsole.log('Servidor Express rodando na porta 3000');\n});\n</code></pre></p> </li> <li> <p>Socket.io</p> </li> </ul> <p>Socket.io \u00e9 uma biblioteca que permite comunica\u00e7\u00e3o em tempo real entre clientes e servidores.</p> <ul> <li>Exemplo:</li> </ul> <pre><code>const io = require('socket.io')(3000);\nio.on('connection', socket =&gt; {\nconsole.log('Novo cliente conectado');\nsocket.emit('message', 'Bem-vindo!');\nsocket.on('message', msg =&gt; {\nconsole.log('Mensagem recebida: ' + msg);\n});\n});\n</code></pre> <p>Streaming de Dados</p> <p>Node.js \u00e9 ideal para o processamento de streams de dados, como arquivos de \u00e1udio e v\u00eddeo.</p> <p>Exemplo:</p> <pre><code>const fs = require('fs');\nconst readStream = fs.createReadStream('arquivo_grande.txt', 'utf8');\nconst writeStream = fs.createWriteStream('saida.txt');\nreadStream.pipe(writeStream);\nreadStream.on('data', chunk =&gt; {\nconsole.log('Novo peda\u00e7o recebido:', chunk);\n});\n</code></pre>"},{"location":"recursos/#modulos-nodejs","title":"M\u00f3dulos Node.js","text":"<p>O Node.js possui v\u00e1rias ferramentas que podem ajudar no desenvolvimento web do lado do servidor. Abaixo temos alguns exemplos:</p> Ferramenta Usada para <code>gm, sharp</code> Manipula\u00e7\u00e3o de imagem, incluindo edi\u00e7\u00e3o, redimensionamento, compacta\u00e7\u00e3o e assim por diante, diretamente no seu c\u00f3digo JavaScript <code>PDFKit</code> Gera\u00e7\u00e3o de PDF <code>validator.js</code> Valida\u00e7\u00e3o de cadeia de caracteres <code>imagemin, UglifyJS2</code> Minifica\u00e7\u00e3o <code>spritesmith</code> Gera\u00e7\u00e3o de folha de Sprite <code>winston</code> Registro em log <code>commander.js</code> Cria\u00e7\u00e3o de aplicativos de linha de comando <p>Tip</p> <p>Voc\u00ea pode usar o m\u00f3dulo do sistema operacional Node.js para realizar a\u00e7\u00f5es como verificar a plataforma e retornar uma vari\u00e1vel espec\u00edfica da plataforma: Win32/.bat para desenvolvimento do Windows, Darwin/.sh para Mac/unix, Linux, SunOS e assim por diante (por exemplo, <code>var isWin = process.platform === \"win32\";</code>).</p>"},{"location":"recursos/#outros-sites-para-aprender-nodejs","title":"Outros Sites para Aprender Node.js","text":"<p>Link para o site oficial do node</p> <p>Link para o site da mozilla</p> <p>Link para a documenta\u00e7\u00e3o do Node na W3Schools</p>"}]}